@using HotelReservation.Components.Models
@using HotelReservation.Data
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<EditForm Model="Room" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="type" required>Type</label>
        <InputSelect id="type" @bind-Value="SelectedTemplateId" required>
            @foreach (var template in RoomTemplates)
            {
                <option value="@template.Id">@template.Name</option>
            }
        </InputSelect>
    </div>
    <div>
        <label for="floor">Floor</label>
        <InputNumber id="floor" @bind-Value="Room.Floor" required />
    </div>
    <div>
        <label for="number">Number</label>
        <InputNumber id="number" @bind-Value="Room.Number" required />
    </div>
    @if (Mode != null)
    {
        <div>
            <button type="submit">@Mode</button>
        </div>
    }
</EditForm>

@code {
    [Parameter] public required Models.Room Room { get; set; }
    [Parameter] public required List<RoomTemplate> RoomTemplates { get; set; }
    [Parameter] public required string? Mode { get; set; }
    [Parameter] public EventCallback<Models.Room> OnSave { get; set; }
    private int SelectedTemplateId { get; set; }

    protected override void OnInitialized()
    {
        if (Room.Type != null)
        {
            SelectedTemplateId = Room.Type.Id;
        }
    }

    private async Task Save()
    {
        Room.Type = RoomTemplates.FirstOrDefault(template => template.Id == SelectedTemplateId);
        await OnSave.InvokeAsync(Room);
    }
}
