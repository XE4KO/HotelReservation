@page "/image-config"
@using HotelReservation.Components.Models
@using HotelReservation.Data
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@inject ApplicationDbContext DbContext;
@inject IWebHostEnvironment Env

<h3>Images</h3>
<br>
@if (!isLoading)
{
	<ImageComponent OnSave="AddImageAsync" Image="NewImage()"/>
	<div>
		@foreach (var image in savedImages)
		{
			<div>
				<img src="@image.Path" width="250" height="250"/>
				<button @onclick="() => DeleteImageAsync(image)">&#x2716;</button>
			</div>
		}
	</div>
}else{
	<span>Loading...</span>
}

@code {
	private Image NewImage() => new Image() {Path=""};
	private List<Image> savedImages = new();
	private bool isLoading = true;

	protected override async Task OnInitializedAsync()
	{
		savedImages = await DbContext.Images.ToListAsync();
		isLoading = false;
	}
	private async Task AddImageAsync(Image image){
		await DbContext.Images.AddAsync(image);
		await DbContext.SaveChangesAsync();
		savedImages.Add(image);
		StateHasChanged();
	}
	private async Task DeleteImageAsync(Image image){
		File.Delete($"{Env.WebRootPath}{image.Path}");
		DbContext.Images.Remove(image);
		await DbContext.SaveChangesAsync();
		savedImages.Remove(image);
		StateHasChanged();
	}
}
